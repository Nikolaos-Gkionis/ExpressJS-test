@mixin focus-highlight-border-5() {
  @include focus-highlight-border(5);
}

@mixin focus-highlight-border-4() {
  @include focus-highlight-border(4);
}

@mixin focus-highlight-border-3() {
  @include focus-highlight-border(3);
}

@mixin focus-highlight-border-2() {
  @include focus-highlight-border(2);
}

@mixin focus-highlight-border($thickness) {
  box-shadow: 0 0 0 #{$thickness}px $colour-mint;
  outline: none;
}

@mixin reading-width() {
  @include media-breakpoint-up(md) {
    max-width: 75%;
  }
}

@mixin centre() {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin centre-vertically() {
  position: relative;
  top: 50%;
  transform: translateY(-50%);
  display: block;
}

@mixin media-print() {
  @media print {
    @content;
  }
}

@mixin shadow-border {
  box-shadow: 0 1px 1px 0 rgba(60, 64, 67, 0.08),
    0 1px 3px 1px rgba(60, 64, 67, 0.16);
}

// Reduce reliance on Bootstrap by using our own media queries
// Ref: https://css-tricks.com/snippets/sass/mixin-manage-breakpoints/
$breakpoints: (
  "xs": 0px,
  "sm": 576px,
  "md": 768px,
  "lg": 992px,
  "xl": 1200px,
) !default;

@mixin pds-media-breakpoint-up($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  } @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}
